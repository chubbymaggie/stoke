##### stoke search config file

--out result.s # Path to write results to

--target bins/_Z3expdPm.s # Path to the function to optimize
--init previous # Begin search from expert code
--previous bins/_Z3expdPm.s

--cpu_flags "{ avx }"

--def_in "{ %xmm0 %rdi }" # The registers that are defined on entry to the target
--live_out "{ %xmm0 }" # The registers that are live on exit from the target
--sse_width 8
--sse_count 1

--testcases exp.tc # Path to testcase file
--training_set "{ 0 ... 127 }" # Testcases to use for measuring correctness during search
--test_set "{ 128 ... 1023 }"  # Testcases to use as holdout set for checking correctness

--distance ulp # Metric for measuring error between live-outs
--min_ulp 5000000000000
--misalign_penalty 1 # Penalty for results that appear in the wrong location
--reduction max # Method for summing errors across testcases
--sig_penalty 9999 # Score to assign to rewrites that produce non-zero signals

--cost "100*correctness + latency" # Measure performance by summing instruction latencies

--global_swap_mass 1 # Proposal mass
--instruction_mass 1 # Proposal mass
--local_swap_mass 1 # Proposal mass
--opcode_mass 1 # Proposal mass
--operand_mass 1 # Proposal mass
--rotate_mass 1 # Proposal mass

--beta 1 # Search annealing constant
--initial_instruction_number 48 # The maximum number of instruction allowed in a rewrite

--statistics_interval 10000 # Print statistics every 10k proposals
--timeout_iterations 1600000
--cycle_timeout 100000

--strategy hold_out # Verify results using a larger hold out testcase set

--postprocessing full
